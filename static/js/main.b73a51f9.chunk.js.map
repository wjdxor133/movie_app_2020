{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","genre","index","key","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"kUAiCeA,MA7Bf,YAA0D,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAC7C,OACE,yBAAKC,UAAU,SACb,yBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,yBAAKI,UAAU,eACb,wBAAIA,UAAU,gBAAgBJ,GAC9B,wBAAII,UAAU,eAAeL,GAC7B,wBAAIK,UAAU,iBACXD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACV,wBAAIC,IAAKD,EAAOL,UAAU,iBACvBI,OAIP,uBAAGJ,UAAU,iBAAiBH,EAAQU,MAAM,EAAG,KAA/C,UCwCOC,G,iNApDbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAGVC,U,sBAAY,8BAAAC,EAAA,sEAKAC,IAAMC,IACd,4DANQ,gBAGEJ,EAHF,EAERK,KACEA,KAAQL,OAKZ,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IARzB,2C,mFAeVQ,KAAKN,c,+BAGG,IAAD,EACuBM,KAAKT,MAA3BC,EADD,EACCA,UAAWC,EADZ,EACYA,OAEnB,OACE,6BAASX,UAAU,aAChBU,EACC,yBAAKV,UAAU,UACb,0BAAMA,UAAU,gBAAhB,eAGF,yBAAKA,UAAU,UACZW,EAAOR,KAAI,SAAAgB,GAAK,OACf,kBAAC,EAAD,CACEb,IAAKa,EAAMC,GACXA,GAAID,EAAMC,GACVzB,KAAMwB,EAAMxB,KACZC,MAAOuB,EAAMvB,MACbC,QAASsB,EAAMtB,QACfC,OAAQqB,EAAME,mBACdtB,OAAQoB,EAAMpB,kB,GA3CZuB,IAAMC,YCDxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.b73a51f9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n\r\nfunction Movie({ year, title, summary, poster, genres }) {\r\n  return (\r\n    <div className=\"movie\">\r\n      <img src={poster} alt={title} title={title} />\r\n      <div className=\"movie__data\">\r\n        <h3 className=\"movie__title\">{title}</h3>\r\n        <h5 className=\"movie__year\">{year}</h5>\r\n        <ul className=\"movie__genres\">\r\n          {genres.map((genre, index) => (\r\n            <li key={index} className=\"genres__genre\">\r\n              {genre}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <p className=\"movie_summary\">{summary.slice(0, 180)}...</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nMovie.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  year: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  summary: PropTypes.string.isRequired,\r\n  poster: PropTypes.string.isRequired,\r\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n\r\nexport default Movie;\r\n\r\n// 이 경우에는 상상할 수 있다시피 movies component는 state를 필요로 하지 않느다.\r\n// 그래서 만약 component가 state가 필요 없을 경우 이게 class component가 될 필요는 없다.\r\n// 예를 들어 class App extends React.Component에서 React.Component를 필요로 하지 않는다.\r\n// 그래서 우리는 우리의 function component로 할거임\r\n// 표지 이미지, title, id, summary, poster를 가져옴\r\n// style={{backgroundColor:\"red\"}} 자바스크립트의 스타일(CSS) 방식\r\n// map function은 또 다른 argument를 준다.\r\n// 첫번째 인자는 현재의 아이템이고, 두번째 인자는 item number이다.\r\n","import React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  state = {\n    isLoading: true,\n    movies: []\n  };\n\n  getMovies = async () => {\n    const {\n      data: {\n        data: { movies }\n      }\n    } = await axios.get(\n      \"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\"\n    );\n    this.setState({ movies, isLoading: false });\n    // 하나는 setState의 movies이고, 다른 하나는 axios에서 온 movies이다.\n    // this.setState({moives:movies}); === this.setState({ movies });\n    // 자바스크립트는 같은 항목이란 것을 이해한다.\n  };\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  render() {\n    const { isLoading, movies } = this.state;\n    // 자바스크립트 Ex6문법 -> this.state에서 isLoading, movies를 가져온 것.\n    return (\n      <section className=\"container\">\n        {isLoading ? (\n          <div className=\"loader\">\n            <span className=\"loader__text\">Loading...</span>\n          </div>\n        ) : (\n          <div className=\"movies\">\n            {movies.map(movie => (\n              <Movie\n                key={movie.id}\n                id={movie.id}\n                year={movie.year}\n                title={movie.title}\n                summary={movie.summary}\n                poster={movie.medium_cover_image}\n                genres={movie.genres}\n              />\n              // map()은 항상 뭔가로 부터 return을 해야한다.\n            ))}\n          </div>\n        )}\n      </section>\n    );\n  }\n}\nexport default App;\n// componentDidMount()로 data를 fetch 할꺼임\n// 그리고 API로 부터 data fetching이 완료되면\n// \"we are ready\" 대신에 movie를 Render하고 map을 만들고 moive를 render 하는 거임.\n// 내가 state를 쓰는 건 자유! 굳이 state 안에 초기값을 선언할 필요는 없음\n// 일반적으로 javascript에서 data를 fetch하는 방법은 fetch를 사용하는 것\n// 하지만 더 좋은 방법으로 Axios라고 부르는 것이 있다.\n// 우리는 axios로 부터 온 data를 잡을 필요가 있다.\n// 왜냐하면 axios가 안에 있는 데이터를 우리에게 주기 때문이다.\n// 그렇기 때문에 우리는 그 데이터를 잡을 필요가 있다.\n// 그래야 state에서 사용할 수 있기 때문이다.\n// 잠시 기다려야해 axios.get은 항상 빠르지 않아\n// 우리는 javascript에게 componentDidMount 함수가 끝날 때까지\n// 약간 시간이 걸릴 수 있다고 말해야 한다.\n// 그걸 위해 우리는 componentDidMount 앞에 async를 넣을거야\n// async()는 비동기를 의미하고, \"너는 이걸 기다려야 해\" 라는 말이다.\n// 함수 내부에서는 \"내가 뭘 기다리길 원해\"? axios?\n// axios가 끝날 때까지 기다렸다가 계속하라는 의미이다.\n// 즉, application은 render하고, 처음에는 isLoading:true\n// application이 mount된 후, 우리는 getMovies function을 호출\n// getMovies는 axios.get을 사용해 하지만 axios.get은 완료되기 까지 시간이 필요하기 때문에 await을 넣었음\n// 만약 async를 사용하지 않는다면 await을 사용할 수 없다.\n// async await을 하는 것은 우리가 기본적으로 javascript에게\n// getMovies function에게 조금 시간이 필요하고 우리는 그걸 기다려야 한다는 것을 말하는 것임\n// import \"./App.css\";를 함으로서, 각 태그의 class 이름을 해당 css 파일에서 쓸 수 있음.\n// 태그에 className을 쓰는 이유는 React의 javascript안에서 class는 class App extends React.Component 와 같이\n// 컴포넌트 class로 인식을 해버리기 때문에, class 대신에 ClassName으로 써줘야 React가 혼동하지 않는다.\n// 하지만, HTML에서의 class는 그냥 class이므로 className을 사용할 필요는 없다.\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}